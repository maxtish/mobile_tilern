export interface History {
  id: string | null;
  title: { de: string; ru: string };
  description: string;
  fullStory: {
    ru: string;
    de: string;
  };
  languageLevel: 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';
  imageUrl: string;
  audioUrl: string;
  wordTiming: WordTiming[];
  words: Word[];
  createdDate: string; // timestamp –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO
  updatedDate: string; // timestamp –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO
  authorName: string;
  authorRole: string;
  viewsCount: number;
  likesCount: number;
  // üîπ –ù–æ–≤–æ–µ –ø–æ–ª–µ
  likedByCurrentUser?: boolean; // —Ñ–ª–∞–≥ –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞, —á—Ç–æ–±—ã –ø–æ–¥—Å–≤–µ—Ç–∏—Ç—å –ª–∞–π–∫
}

export interface WordTiming {
  word: string; // —Å–ª–æ–≤–æ –Ω–∞ –Ω–µ–º–µ—Ü–∫–æ–º
  start: number; // –≤—Ä–µ–º—è –Ω–∞—á–∞–ª–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
  end: number; // –≤—Ä–µ–º—è –∫–æ–Ω—Ü–∞ –≤ —Å–µ–∫—É–Ω–¥–∞—Ö
}

// –¢–∏–ø —Å–ª–æ–≤–∞
/////// –û–±—â–∏–π –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è —Å–ª–æ–≤–∞

export interface BaseWord {
  type: WordType; // —Ç–∏–ø —Å–ª–æ–≤–∞
  translation: string; // –ø–µ—Ä–µ–≤–æ–¥ —Å–ª–æ–≤–∞ –Ω–∞ —Ä—É—Å—Å–∫–∏–π
}
export type WordType = 'noun' | 'verb' | 'other';

export type Word = {
  type: WordType;
  word: string | { singular: string | null; plural: string | null };
  translation: string;
};

export interface StoryTiming {
  text: string;
  wordTiming: WordTiming[];
}

// --- –ò–Ω—Ç–µ—Ä—Ñ–µ–π—Å –¥–ª—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö ---
export interface DBHistory {
  id: string;
  title: { de: string; ru: string };
  description: string;
  full_story: { de: string; ru: string };
  language_level: 'A1' | 'A2' | 'B1' | 'B2' | 'C1' | 'C2';
  image_url: string;
  audio_url: string;
  word_timing: WordTiming[];
  words: Word[];
  created_at: string; // timestamp –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO
  updated_at: string; // timestamp –≤ —Ñ–æ—Ä–º–∞—Ç–µ ISO
  author_name: string;
  author_role: string;
  views_count: number;
  likes_count: number;
}

// --- –§—Ä–æ–Ω—Ç–µ–Ω–¥ -> –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö ---
export const mapHistoryToDB = (history: History): DBHistory => ({
  id: history.id || '', // –µ—Å–ª–∏ –Ω–µ—Ç, UUID –≥–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–¥–µ–ª—å–Ω–æ –ø—Ä–∏ –≤—Å—Ç–∞–≤–∫–µ
  title: history.title,
  description: history.description,
  full_story: history.fullStory,
  language_level: history.languageLevel,
  image_url: history.imageUrl,
  audio_url: history.audioUrl,
  word_timing: history.wordTiming,
  words: history.words,
  created_at: history.createdDate || new Date().toISOString(),
  updated_at: history.updatedDate || new Date().toISOString(),
  author_name: history.authorName,
  author_role: history.authorRole,
  views_count: history.viewsCount ?? 0,
  likes_count: history.likesCount ?? 0,
});

// --- –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö -> –§—Ä–æ–Ω—Ç–µ–Ω–¥ ---
export const mapDBToHistory = (dbHistory: DBHistory): History => ({
  id: dbHistory.id,
  title: dbHistory.title,
  description: dbHistory.description,
  fullStory: dbHistory.full_story,
  languageLevel: dbHistory.language_level,
  imageUrl: dbHistory.image_url,
  audioUrl: dbHistory.audio_url,
  wordTiming: dbHistory.word_timing,
  words: dbHistory.words,
  createdDate: dbHistory.created_at,
  updatedDate: dbHistory.updated_at,
  authorName: dbHistory.author_name,
  authorRole: dbHistory.author_role,
  viewsCount: dbHistory.views_count,
  likesCount: dbHistory.likes_count,
});

/*
–ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å

–í—Å—Ç–∞–≤–∫–∞ –∏—Å—Ç–æ—Ä–∏–∏ –≤ –±–∞–∑—É:

import { insertHistory } from './historyService';

const history: History = { ... }; // –æ–±—ä–µ–∫—Ç –∏–∑ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞
const dbHistory = mapHistoryToDB(history);

await insertHistory(dbHistory);


–ß—Ç–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ –∏–∑ –±–∞–∑—ã –¥–ª—è —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥–∞:

import { getAllHistories } from './historyService';

const dbHistories = await getAllHistories();
const frontendHistories: History[] = dbHistories.map(mapDBToHistory);



*/
